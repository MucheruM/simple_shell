#include "shell.h"

/**
 * shell_interactive -Determine if shell is in interactive mode
 * @shell_info: Pointer to struct containing shell info
 * Return: 1 if shell is in interactive mode, 0 otherwise
 */
int shell_interactive(info_t *shell_info)
{
	return (isatty(STDIN_FILENO) && shell_info->readfd <= 2);
}

/**
 * check_delim - Verifies if a character is a delimeter
 * @char_check: The char to be checked
 * @delim_str: String containing delimeter characters
 * Return: 1 if char is a delimeter, 0 otherwise
 */
int check_delim(char char_check, char *delim_str)
{
	while (*delim_str)

	if (*delim_str++ == char_check)
	return (1);
	return (0);
}

/**
 * check_alpha - Verifies that the char is alphabetic
 * @char_input: The character to be checked
 * Return: 1 if char is alphabetic, 0 otherwise
 */
int check_alpha(int char_input)
{
	if ((char_input >= 'a' && char_input <= 'z') ||
	    (char_input >= 'A' && char_input <= 'Z'))
	return (1);

	else
	return (0);
}

/**
 * convert_str_to_int - Converts a string to an integer
 * @str_input: The string to be converted
 * Return: The int rep of the string if it contains numbers, 0 otherwise
 */
int convert_str_to_int(char *str_input)
{
	int index, sign = 1, flag = 0, output;
	unsigned int result = 0;

	for (index = 0;  str_input[index] != '\0' && flag != 2; index++)
	{
	if (str_input[index] == '-')
	sign *= -1;

	if (str_input[index] >= '0' && str_input[index] <= '9')
	{
	flag = 1;
	result *= 10;
	result += (str_input[index] - '0');
	}

	else if (flag == 1)
	flag = 2;
	}
	if (sign == -1)
	output = -result;
	else

	output = result;
	return (output);
}
